using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using IronPython.Hosting;
using IronPython.Runtime;
using IronPython;
using Microsoft.Scripting.Hosting;
using Microsoft.Scripting;
using Python.Runtime;
using IronPython.Modules;
using System.Diagnostics;
using AvukatProjectCore.DTOs;
using Newtonsoft.Json;

namespace AvukatProjectCore.Model
{
    public class PythonCode
    {
        //public static string CallPyFunction(string question)
        //{
        //    //var engine = IronPython.Hosting.Python.CreateRuntime();
        //    //dynamic python = engine.UseFile("C:\\Users\\0meng\\OneDrive\\Masaüstü\\deneme\\deneme.py");
        //    ScriptEngine engine = IronPython.Hosting.Python.CreateEngine();

        //    ICollection<string> searchPaths = engine.GetSearchPaths();
        //    searchPaths.Add("C:\\Users\\0meng\\AppData\\Local\\Programs\\Python\\Python311\\Lib");
        //    searchPaths.Add("C:\\Users\\0meng\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages");

        //    engine.SetSearchPaths(searchPaths);
        //    ScriptScope scope = engine.CreateScope();

        //    // Python betiğini yükle
        //    //ScriptSource source = engine.CreateScriptSourceFromFile("C:\\Users\\0meng\\OneDrive\\Masaüstü\\deneme\\deneme.py");
        //    ScriptSource source = engine.CreateScriptSourceFromFile("c:/Users/0meng/OneDrive/Masaüstü/deneme/deneme.py");
        //    CompiledCode compiledCode = source.Compile();
        //    compiledCode.Execute(scope);

        //    // Python fonksiyonunu çağır
        //    var pythonFunction = scope.GetVariable("find_similar_questions");
        //    dynamic result = pythonFunction(question);
        //    //dynamic sonuc = python.find_similar_questions(question);


        //    return result;
        //}
        public  void Initialize()
        {
            string pythonDll = @"C:\Users\0meng\AppData\Local\Programs\Python\Python311\python311.dll";
            string EnvPath = @"C:\Users\0meng\AppData\Local\Programs\Python\Python311";
            string pythonPath = @"C:\Users\0meng\.nuget\packages\pythonnet\3.0.1";
            Environment.SetEnvironmentVariable("PYTHONNET_PYDLL", pythonDll);
            Environment.SetEnvironmentVariable("PATH", EnvPath, EnvironmentVariableTarget.Process);
            Environment.SetEnvironmentVariable("PYTHONHOME", EnvPath, EnvironmentVariableTarget.Process);
            Environment.SetEnvironmentVariable("PYTHONPATH", pythonPath, EnvironmentVariableTarget.Process);

            //PythonEngine.PythonHome = Environment.GetEnvironmentVariable("PYTHONHOME", EnvironmentVariableTarget.Process);


            //Runtime.PythonDLL = @"C:\Users\0meng\AppData\Local\Programs\Python\Python39\python39.dll";
            PythonEngine.Initialize();

        }
        //public Oppressions CallPyFunction(Questions question, List<int> questionsIdList, List<string> questionsList)
        //{
        //    Oppressions a;

        //    Initialize();
        //    using (Py.GIL())
        //    {
        //        //dynamic pythonModule = Py.Import(@"C:\Users\0meng\source\repos\AvukatProjects\AvukatProject\AvukatProject\deneme.py");
        //        //// Python dosyasındaki fonksiyonu çağır
        //        //result = pythonModule.find_similar_questions(question);
        //        var filePath = "C:\\Users\\0meng\\source\\repos\\AvukatProjects\\AvukatProject\\AvukatProject\\deneme.py";
        //        dynamic os = Py.Import("os");
        //        dynamic sys = Py.Import("sys");
        //        sys.path.append(os.path.dirname(os.path.expanduser(filePath)));
        //        dynamic fromFile = Py.Import(Path.GetFileNameWithoutExtension(filePath));
        //        var result = fromFile.find_similar_questions(question, questionsIdList, questionsList);
        //         a = new Oppressions
        //        { Question = result.question, OppressionQuestionId = result.maxQuestionId, Oppression = result.maxSimilarity };

        //        //result = JsonConvert.SerializeObject(resultObject);

        //    }
        //    return a;
        //}
        public string Run(string cmd, string  args)
        {
            ProcessStartInfo start = new ProcessStartInfo();
            start.FileName = "python";
            start.Arguments = string.Format("\"{0}\" \"{1}\"", cmd, args);
            start.UseShellExecute = false;// Do not use OS shell
            start.CreateNoWindow = true; // We don't need new window
            start.RedirectStandardOutput = true;// Any output, generated by application will be redirected back
            start.RedirectStandardError = true; // Any error in standard output will be redirected back (for example exceptions)
            using (Process process = Process.Start(start))
            {
                using (StreamReader reader = process.StandardOutput)
                {
                    string stderr = process.StandardError.ReadToEnd(); // Here are the exceptions from our Python script
                    var result = reader.ReadToEnd(); // Here is the result of StdOut(for example: print "test")
                
                    return result;
                }
            }
        }
        //public  string CallPyFunction(string question)
        //{
        //    string a;

        //    Initialize();
        //    using (Py.GIL())
        //    {
        //        //dynamic pythonModule = Py.Import(@"C:\Users\0meng\source\repos\AvukatProjects\AvukatProject\AvukatProject\deneme.py");
        //        //// Python dosyasındaki fonksiyonu çağır
        //        //result = pythonModule.find_similar_questions(question);
        //        var filePath = "C:\\Users\\0meng\\source\\repos\\AvukatProjects\\AvukatProject\\AvukatProject\\deneme.py";
        //        dynamic os = Py.Import("os");
        //        dynamic sys = Py.Import("sys");
        //        sys.path.append(os.path.dirname(os.path.expanduser(filePath)));
        //        dynamic fromFile = Py.Import(Path.GetFileNameWithoutExtension(filePath));
        //        var result = fromFile.find_similar_questions(question);
        //        a = result.ToString();
        //        //result = JsonConvert.SerializeObject(resultObject);
        //    }

        //    return a;
        //}
        public Oppressions CallPyFunction(Questions question)
        {
            Oppressions result;
            //var filePath = "C:\\Users\\0meng\\source\\repos\\AvukatProjects\\AvukatProject\\AvukatProject\\deneme.py";
            var filePath = "..\\AvukatProject\\SimilarQuestion.py";
            var serializedQuestion = JsonConvert.SerializeObject(question);
            var  a = Run(filePath, serializedQuestion);
            if(a != "")
            {
            Dictionary<string, object> dict = JsonConvert.DeserializeObject<Dictionary<string, object>>(a);
            int ooi = Convert.ToInt32(dict["OppressionQuestionId"]);
            double o = Convert.ToDouble(dict["Oppression"]);
            var resultObjects = new Oppressions
            { Question = question, OppressionQuestionId = ooi, Oppression = o };
            return resultObjects;
            }
            else
            {
                return null;
            }
        }

    }

}
